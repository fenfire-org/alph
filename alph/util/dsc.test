# 
# Copyright (c) 2003, Tuomas J. Lukka
# This file is part of Alph.
# 
# Alph is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# Alph is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
# Public License for more details.
# 
# You should have received a copy of the GNU General
# Public License along with Alph; if not, write to the Free
# Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA  02111-1307  USA
# 


import os
import alph

pdffiles = [
["test1.pdf", 2]
]

def testDSCTokens():
    assert (alph.util.dscutil._dsctokens("a b (c d)") ==
		    ["a", "b", "(c d)"])
    assert (alph.util.dscutil._dsctokens("a b (c d) ") ==
		    ["a", "b", "(c d)"])
    assert (alph.util.dscutil._dsctokens("( ) a ") ==
		    ["( )", "a"])

def _rm(file):
    try:
	os.remove(file)
    except:
	pass

def testPDF():
    outdsc = "tmpdsc"
    for f in pdffiles:
	_rm(outdsc)
	assert alph.util.dscutil.reliablePDF2DSC("testdata/"+f[0], outdsc)
	pageinfo = alph.util.dscutil.dsc2pageinfo(outdsc)
	assert pageinfo.getNPages() == f[1]
    _rm(outdsc)
